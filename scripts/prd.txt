# Overview
This document outlines the requirements for updating the team member display grid on the `/src/app/studio/page.tsx` page and enhancing the existing accordion UI component located at `/src/components/ui/accordion.tsx`. The primary problem is the current two-column layout for the team grid is not optimal for scannability on larger screens, and the existing accordion component lacks clear visual state indication and interactivity. This project aims to improve the visual layout of the team section, enhance the accordion's usability with a rotating icon and smooth animations, and ensure the improved accordion is a reusable component for consistency across the application. This benefits site visitors by providing a clearer interface and developers by providing a more robust UI primitive.

# Core Features
## 1. Team Grid Layout Update
*   **What it does:** Modifies the team member section on `/src/app/studio/page.tsx` to display content in a three-column grid layout on larger screens (Tailwind `lg` breakpoint and up).
*   **Why it's important:** Improves scannability and information density for users viewing the site on desktops or larger tablets.
*   **How it works:** Achieved by applying appropriate Tailwind CSS v3 grid utility classes to the container element wrapping the team members. The layout will responsively adjust to fewer columns on smaller breakpoints (`md`, `sm`). (REQ-GRID-001, REQ-GRID-002)

## 2. Enhanced Accordion Component
*   **What it does:** Modifies the existing reusable accordion component (`/src/components/ui/accordion.tsx`) to include an interactive SVG icon that indicates the collapsed/expanded state.
*   **Why it's important:** Provides clear visual feedback to users about the accordion's state and improves the perceived quality and interactivity of the UI. Ensures consistency for this pattern across the site.
*   **How it works:**
    *   Integrates a beige SVG triangle icon within the accordion's trigger element. (REQ-ACC-001, REQ-ACC-002 - updated color)
        ```xml
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><title>caret-down</title><g fill="#F5F5DC"> <path d="M21 7L3 7L12 19L21 7Z" fill="#F5F5DC"></path> </g></svg> 
        ```
        *(Note: Using beige `#F5F5DC`)*
    *   The icon visually points upwards (rotated 180 degrees or default up) when collapsed and downwards (default down or rotated back) when expanded. (REQ-ACC-003, REQ-ACC-004)
    *   Clicking/activating the trigger toggles the content's visibility and animates the icon's rotation by 180 degrees using Tailwind CSS transform and transition utilities (`transition-transform`, `rotate-180`, appropriate duration). (REQ-ACC-005, REQ-ACC-007)
    *   The expansion/collapse of the content area is also smoothly animated. (REQ-ACC-006)
    *   Accordion expansion/collapse correctly pushes/pulls subsequent page content. (REQ-ACC-008)
    *   All modifications are encapsulated within the reusable component. (REQ-ACC-009)

# User Experience
*   **User Personas:**
    *   **Site Visitor (Desktop/Mobile):** Wants to easily scan the team members and understand how to reveal more information (like biographies).
    *   **Keyboard-Only User:** Needs to be able to navigate and operate interactive elements like accordions without a mouse. (US-005)
    *   **Developer:** Needs reusable, consistent, and accessible UI components. (US-004)
*   **Key User Flows:**
    1.  Visitor navigates to the Studio page.
    2.  Visitor observes the team grid layout (3 columns on large screens, responsive otherwise). (US-001)
    3.  Visitor sees an accordion element (e.g., for a team member bio) with an upward-pointing beige triangle. (US-002)
    4.  Visitor clicks (or activates via keyboard) the accordion trigger.
    5.  Visitor observes the triangle smoothly rotate downwards as the content area smoothly expands, pushing down other content. (US-003)
    6.  Visitor clicks again; observes the reverse animation.
*   **UI/UX Considerations:**
    *   **Visual Feedback:** The rotating icon provides immediate feedback on state changes.
    *   **Smoothness:** Animations must be fluid and non-jarring (REQ-NFR-002).
    *   **Responsiveness:** Grid and accordion must function correctly on all standard device sizes (REQ-NFR-001).
    *   **Accessibility:** Accordion must be keyboard navigable and ARIA attributes must be correctly implemented for screen readers (REQ-NFR-003, US-005). The beige icon color should be checked for sufficient contrast against its background.

# Technical Architecture
*   **System Components:**
    *   Frontend application (React/Next.js assumed).
    *   Target Page: `/src/app/studio/page.tsx`.
    *   Target Component: `/src/components/ui/accordion.tsx`.
*   **Styling:** Tailwind CSS v3 utility classes.
*   **Key Libraries/Frameworks:** React (or similar framework handling the component logic).
*   **Implementation Details:**
    *   Modify CSS classes (Tailwind) on the grid container in `studio/page.tsx`.
    *   Modify the React component structure in `ui/accordion.tsx` to include the SVG and state management (likely React state) to toggle classes/styles for rotation and expansion.
    *   Use Tailwind utilities for:
        *   Grid layout (`grid`, `grid-cols-3`, `md:grid-cols-2`, etc.)
        *   Transitions (`transition-transform`, `transition-all`, `duration-200`, `ease-in-out`, etc.)
        *   Transforms (`rotate-180`)
    *   Implement ARIA attributes (`aria-expanded`, `aria-controls`) dynamically based on component state.

# Development Roadmap
*   **MVP Requirements:**
    1.  Modify `/src/components/ui/accordion.tsx` to include the beige SVG icon, rotation animation based on state, and smooth content expansion/collapse using Tailwind utilities. Ensure accessibility attributes are correct.
    2.  Update `/src/app/studio/page.tsx` to use a 3-column responsive grid layout for the team section using Tailwind utilities.
    3.  Ensure the Studio page uses the updated accordion component correctly (if applicable for team bios).
*   **Future Enhancements:**
    *   (None specified in this scope). Potential future items could include persisting accordion state or adding configuration options to the component.

# Logical Dependency Chain
1.  **Foundation:** Confirm the existence and basic functionality of the `/src/components/ui/accordion.tsx` component.
2.  **Component Enhancement:** Modify `/src/components/ui/accordion.tsx` to implement the new icon, rotation, and animation features. This can be developed and tested in isolation (e.g., using Storybook or a dedicated test page).
3.  **Page Integration:** Update the `/src/app/studio/page.tsx` grid layout. If this page uses the accordion, verify it integrates correctly with the enhanced component. Implementing the visual component change first allows for quicker feedback.

# Risks and Mitigations
*   **Technical Challenges:**
    *   *Risk:* Ensuring smooth animation performance across all target browsers/devices.
    *   *Mitigation:* Use hardware-accelerated CSS transitions/transforms (standard with Tailwind utilities). Test thoroughly on different browsers and devices.
    *   *Risk:* Ensuring correct ARIA implementation for accessibility.
    *   *Mitigation:* Follow ARIA authoring practices for accordions. Test with screen readers (e.g., NVDA, VoiceOver).
    *   *Risk:* Potential CSS conflicts with existing styles.
    *   *Mitigation:* Scope styles appropriately or rely on Tailwind's utility-first nature which minimizes conflicts. Test layout changes carefully.
    *   *Risk:* Contrast issues with the beige icon against various potential backgrounds.
    *   *Mitigation:* Test the icon against expected background colors. Consider defining the icon color via CSS variable or prop for flexibility if needed, though hardcoding beige is requested for now.
*   **Figuring out the MVP:** The MVP scope is well-defined and small, risk is low.
*   **Resource Constraints:** Assumes developer availability to implement the changes.

# Appendix
*   **SVG Icon Color:** Beige (`#F5F5DC`) - verify contrast accessibility.
*   **Tailwind CSS Version:** Assumed v3.x.
*   **Open Questions Resolved:** Icon color specified as beige. Default animation timings assumed unless specified otherwise during development.